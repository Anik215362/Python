# -*- coding: utf-8 -*-
"""Reshape, Mod, Exponent, Trigonometric Function

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mxugopEKxBLz6eKeXKccvYlInv4DCksX
"""

import numpy as np

lst = [0,1,2,3,4,5]
numpy_array = np.array(lst)
type(numpy_array)

type(lst)

array = np.arange(0,100,2)
array

"""# Reshape"""

array_2d = array.reshape(5,10)
print(array_2d)

array_3d = array.reshape(2,5,5)

print('-'*20)
print(array_3d)

array_3d = array.reshape(1,10,5)
array_3d

num = np.array([1,4,9,16,25,49])

"""# Arithmatic Operation"""

np.sqrt(num)

num2 = np.arange(0,6)*6
num2

num2 = np.arange(0,6)+6
num2

num2 = np.arange(0,6)-6
num2

num2 = np.arange(0,6)/6
num2

np.add(num,num2)

num3 = np.array([1,2,4,5,10,15])

np.divide(num, num3)

"""#mod = sign(divisor-reminder)"""

np.mod(num, num3)

np.remainder(num, num3)

"""#Array Product"""

A = np.array([[1,1],[0,1]])
B = np.array([[2,0],[3,4]])

#Multiply
A*B

np.multiply(A,B)

"""@ or dot()"""

A @ B

A.dot(B)

"""# Exponent & Logarithm"""

#2**4
np.power(2,4)

"""e^2 exp(2)"""

np.exp(2)

np.power(3,3)

np.log10(2**2)

np.log2(4)

"""# Trigonometric Functions"""

import math

value = np.array([0,30,45,60,90])

np.sin(value)

a = np.sin(value*math.pi/180)
a

result = np.arcsin(a)
result

np.degrees(result)

ar = np.array([[87,96,70],[100,87,90],[94,77,90],[100,81,52]])

ar

new = ar[0:3][1:]

new

ar[0:2]