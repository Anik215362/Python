# -*- coding: utf-8 -*-
"""Numpy basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KgW9g2v8mjBI7xuseiEEEcULJIGaW5s1
"""

import numpy as np

"""# Creating arrays from Existing Data"""

numbers = np.array([2,3,5,7,11])
numbers

type(numbers)

"""Multidimensional Arguments"""

#1D array
array_1D = np.array([2,4,5,6])
array_1D

#2D array
a = [[1,2,3],
    [1,2,3],
    [1,2,3]]
for i in a:
    for j in i:
        print(j)

array_2D = np.array([[2,4,5,6],
                   [2,4,5,6],
                   [2,4,5,6]])
array_2D

#3D array
a = [[[1,2,3],
    [1,2,3]],
    [[1,2,3],
    [1,2,3]]]
len(a)

array_3D = np.array([[[2,4,5,6],[2,4,5,6],[2,4,5,6]]])
array_3D

"""# Problem 1

Create a two-dimensional array from a list comprehension that produces the even integers from 2 through 20 in the first row and the odd integers from 1 through 21 in the second row.
"""

arr = np.array([[i for i in range(2,21,2)],[i for i in range(1,22,2)]])
arr

"""# Array Attributes"""

floats = np.array([0.0,0.1,0.2,0.3])
floats

integers = np.array([[1,2,3],[4,5,6],[7,8,9]])
integers

strings = np.array(['apple','big','cat'])
strings

"""# Checking an array's element types"""

type(32)

floats.dtype

integers.dtype

strings.dtype

"""#checking an array's dimentions & shape"""

array_1D.ndim

array_2D.ndim

array_3D.ndim

integers.ndim

len(array_3D)

array_3D.shape

array_2D.shape

"""#Checking an array's Number of Elements and Element size"""

integers.size

array_3D.size

integers.itemsize

floats.size

floats.itemsize

strings.size

strings.itemsize

arr = np.array(['tokyo','dhaka','newyork was never'])
arr

"""# Array Operators"""

x = np.arange(5)
x

x+10 #scalar addition is element wise

x*2 #scalar multiplication is element wise

x+x #array addition is element wise

x*x #array multiplication is element wise

x/10 #array division is element wise

x//10

2*3

x**3

x = np.array([[11,9,11],[2,15,18]])

x>10

x>=10

x<10

x<=10

x==9

x!=11

"""# Numpy Methods"""

grades = np.array([[87,96,70],[100,87,90],[94,77,90],[100,81,82]])
grades

grades.max()

grades.min()

grades.sum()

grades.std()

grades.mean()

grades.var()

grades.mean(axis=1)

import copy

li1 = [1,2,[3,5],4]

li2 = copy.deepcopy(li1)

li2

li1

li2[2][0]='z'

li2

li1